<?xml version="1.0" encoding="utf-8"?>
<xs:schema
  elementFormDefault="qualified"
  targetNamespace="urn:the78mole:specification"
  version="1.0"
  xml:lang="en"
  xmlns="urn:the78mole:specification"
  xmlns:spec="urn:the78mole:specification"
  xmlns:xhtml="http://www.w3.org/1999/xhtml"
  xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <!-- Load the XHTML 1.1 strict schema. -->
  <xs:import
    namespace="http://www.w3.org/1999/xhtml"
    schemaLocation="http://www.w3.org/2002/08/xhtml/xhtml1-strict.xsd"
  />

  <!-- Define the only document element. -->
  <xs:element name="specification">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="project" type="project"/>
        <xs:element name="introduction" type="introduction"/>
        <xs:element name="definitions" type="definitions"/>
        <xs:element name="section" type="section"/>
      </xs:sequence>
    </xs:complexType>
    <xs:key name="GlobalNumber">
      <xs:selector xpath="spec:use-cases/spec:use-case
        | spec:use-cases/spec:group/spec:use-case
        | spec:functional-requirements/spec:requirement
        | spec:functional-requirements/spec:group/spec:requirement
        | spec:nonfunctional-requirements/spec:requirement
        | spec:nonfunctional-requirements/spec:group/spec:requirement"/>
      <xs:field xpath="spec:number"/>
    </xs:key>
    <xs:keyref name="GlobalNumberRef" refer="GlobalNumber">
      <xs:selector xpath="spec:functional-requirements/spec:requirement/spec:references/spec:reference
        | spec:functional-requirements/spec:group/spec:requirement/spec:references/spec:reference
        | spec:nonfunctional-requirements/spec:requirement/spec:references/spec:reference
        | spec:nonfunctional-requirements/spec:group/spec:requirement/spec:references/spec:reference"/>
      <xs:field xpath="."/>
    </xs:keyref>
  </xs:element>

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Shared Types
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

  <xs:complexType name="section">
  	<xs:sequence maxOccurs="unbounded" minOccurs="0">
  	  <xs:element name="description" type="block" />
      <xs:sequence>
        <xs:choice>
          <xs:element name="subsection" type="section"/>
          <xs:element name="requirement" type="requirement"/>
        </xs:choice>
  	  </xs:sequence>
  	</xs:sequence>
  </xs:complexType>

  <xs:complexType name="block">
    <xs:choice maxOccurs="unbounded" minOccurs="0">
      <xs:group ref="xhtml:block"/>
    </xs:choice>
  </xs:complexType>

  <xs:complexType mixed="true" name="block-and-inline">
    <xs:choice maxOccurs="unbounded" minOccurs="0">
      <xs:group ref="xhtml:block"/>
      <xs:group ref="xhtml:inline"/>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="inline" mixed="true">
    <xs:choice maxOccurs="unbounded" minOccurs="0">
      <xs:group ref="xhtml:inline"/>
    </xs:choice>
  </xs:complexType>

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Project Information
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

  <xs:complexType name="project">
    <xs:sequence>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="disciplines" type="disciplines"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="disciplines">
    <xs:sequence>
      <xs:element name="discipline">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="ALL"/>
            <xs:enumeration value="UNDEFINED"/>
            <xs:enumeration value="NONE"/>            
            <xs:enumeration value="management"/>
            <xs:enumeration value="hardware"/>
            <xs:enumeration value="software"/>
            <xs:enumeration value="mechanical"/>
            <xs:enumeration value="quality"/>
            <xs:enumeration value="safety"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Introduction
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

  <xs:complexType name="introduction">
    <xs:sequence>
      <xs:element name="purpose" type="block"/>
      <xs:element name="scope" type="block"/>
      <xs:element name="overview" type="block"/>
      <xs:element name="references" type="references"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="references">
    <xs:sequence maxOccurs="unbounded">
      <xs:element name="reference" type="reference"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="reference">
    <xs:sequence>
      <xs:element name="text" type="inline"/>
      <xs:element name="link" type="xs:anyURI"/>
    </xs:sequence>
  </xs:complexType>

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Definitions
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

  <xs:complexType name="definitions">
    <xs:sequence maxOccurs="unbounded">
      <xs:element name="definition" type="definition"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="definition">
    <xs:sequence>
      <xs:element name="term" type="xs:string"/>
      <xs:element name="definition" type="inline"/>
    </xs:sequence>
  </xs:complexType>

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Use Cases
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

  <xs:complexType name="use-cases">
    <xs:choice maxOccurs="unbounded">
      <xs:element name="use-case" type="use-case"/>
      <xs:element name="group">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="title" type="xs:string"/>
            <xs:element maxOccurs="unbounded" name="use-case" type="use-case"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="use-case">
    <xs:sequence>
      <xs:element name="number" type="xs:ID"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="summary" type="inline"/>
      <xs:element name="rationale" type="inline"/>
      <xs:element name="users" type="users"/>
      <xs:element name="preconditions" type="inline"/>
      <xs:element name="basic-events" type="basic-events"/>
      <xs:element name="alternative-paths" type="alternative-paths"/>
      <xs:element name="postconditions" type="inline"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="users">
    <xs:sequence maxOccurs="unbounded">
      <xs:element name="user" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="basic-events">
    <xs:sequence maxOccurs="unbounded">
      <xs:element name="event" type="inline"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="alternative-paths">
    <xs:sequence maxOccurs="unbounded">
      <xs:element name="path" type="inline"/>
    </xs:sequence>
  </xs:complexType>

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Requirements
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

  <xs:complexType name="requirements">
    <xs:choice maxOccurs="unbounded">
      <xs:element name="group">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="title" type="xs:string"/>
            <xs:element maxOccurs="unbounded" name="requirement" type="requirement"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="requirement" type="requirement"/>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="requirement">
    <xs:sequence>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="summary" type="inline"/>
      <xs:element name="rationale" type="inline"/>
      <xs:element name="requirements" type="block-and-inline"/>
      <xs:element name="references">
        <xs:complexType>
          <xs:sequence maxOccurs="unbounded">
            <xs:element name="reference" type="xs:IDREF"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changeHistory" type="history"/>
      <xs:element name="requiredTests">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="test" minOccurs="1" maxOccurs="unbounded">
              <xs:complexType>
                <xs:attribute name="type" type="testTypes"/>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="tests" type="tests"/>
      <xs:element name="useCases" type="use-cases"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" />
    <xs:attribute name="is-a" type="reqType" default="functional"/>
    <xs:attribute name="status" type="reqStat" default="initial"/>
  </xs:complexType>
  
  <xs:simpleType name="reqType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="functional"/>
      <xs:enumeration value="quality"/>
      <xs:enumeration value="ancillary"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="reqStat">
    <xs:restriction base="xs:string">
      <xs:enumeration value="initial"/>
      <xs:enumeration value="review"/>
      <xs:enumeration value="invalid"/>
      <xs:enumeration value="change"/>
      <xs:enumeration value="rejected"/>
      <xs:enumeration value="accepted"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:complexType name="history">
  	<xs:sequence>
  		<xs:element name="description" type="block-and-inline"/>
  	</xs:sequence>
  	<xs:attribute name="date" type="xs:dateTime"/>
  	<xs:attribute name="author" type="xs:string"/>
  </xs:complexType>
  
  <xs:complexType name="tests">
  	<xs:sequence>
  		<xs:element name="test" type="test" />
  	</xs:sequence>
  </xs:complexType>
  
  <xs:simpleType name="testTypes">
    <xs:restriction base="xs:string">
      <xs:enumeration value="manual"/>
      <xs:enumeration value="review"/>
      <xs:enumeration value="unitTest"/>
      <xs:enumeration value="integrationTest"/>
      <xs:enumeration value="emulatorTest"/>
      <xs:enumeration value="systemTest"/>
      <xs:enumeration value="hilTest"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:complexType name="test">
    <xs:choice>
      <xs:element name="unitTest" type="unitTest"/>
      <xs:element name="integrationTest" type="integrationTest"/>
      <xs:element name="systemTest" type="systemTest"/>
      <xs:element name="hilTest" type="hilTest"/>
      <xs:element name="review" type="review"/>
      <xs:element name="emulatorTest" type="emulatorTest"/>
    </xs:choice>
  </xs:complexType>
  
  <xs:complexType name="unitTest">
    <xs:sequence>
      <xs:element name="results" type="testResults" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
    <xs:attribute name="unitTestID" type="xs:string"/>
    <xs:attribute name="unitUnderTest" type="xs:string"/>
    <xs:attribute name="testClassName" type="xs:string"/>
    <xs:attribute name="testMethodName" type="xs:string"/>
    <xs:attribute name="versionControlURI" type="xs:anyURI"/>
    <xs:attribute name="versionControlRef" type="xs:string"/>
  </xs:complexType>
  
  <xs:complexType name="integrationTest">
    <xs:sequence>
      <xs:element name="results" type="testResults" minOccurs="0" maxOccurs="1"/>
	  <xs:element name="integrationTestExecution" type="testExecution"/>
    </xs:sequence>
    <xs:attribute name="testID" type="xs:string"/>
  </xs:complexType>
  
  <xs:complexType name="systemTest">
    <xs:sequence>
      <xs:element name="results" type="testResults" minOccurs="0" maxOccurs="1"/>
	  <xs:element name="integrationTestExecution" type="testExecution"/>
    </xs:sequence>
    <xs:attribute name="testID" type="xs:string"/>
  </xs:complexType>
  
  <xs:complexType name="emulatorTest">
    <xs:sequence>
      <xs:element name="results" type="testResults" minOccurs="0" maxOccurs="1"/>
	  <xs:element name="integrationTestExecution" type="testExecution"/>
    </xs:sequence>
    <xs:attribute name="testID" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="hilTest">
    <xs:sequence>
      <xs:element name="results" type="testResults" minOccurs="0" maxOccurs="1"/>
	  <xs:element name="integrationTestExecution" type="testExecution"/>
    </xs:sequence>
    <xs:attribute name="testID" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="review">
    <xs:sequence>
      <xs:element name="results" type="testResults" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
    <xs:attribute name="testID" type="xs:string"/>
  </xs:complexType>

  <!-- The testExecution is a reference to an executable, defined in a common place. -->
  <xs:complexType name="testExecution">
    <xs:attribute name="execRef" type="xs:IDREF"/>
  </xs:complexType>  
  
  <xs:complexType name="testResults">
    <xs:sequence>
      <xs:element name="result">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="result">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="environment" type="xs:string"/> <!-- Change this to a full type -->
                </xs:sequence>
                <xs:attribute name="date" type="xs:dateTime"/>
                <xs:attribute name="runner" type="xs:string" default="manual"/>
                <xs:attribute name="result" default="undefined">
                  <xs:simpleType>
                    <xs:restriction base="xs:string">
                      <xs:enumeration value="undefined"/>
                      <xs:enumeration value="failed"/>
                      <xs:enumeration value="running"/>
                      <xs:enumeration value="pass"/>
                    </xs:restriction>
                  </xs:simpleType>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  
</xs:schema>
